"use strict";
$(function() {
    function e() {
        var e = m.detail_list[c].data.hash_card_id;
        $("#search_cartoon").attr("href", p.replace("__idol_search_param__", m.detail_list[c].idol_search_param)), $(".form_check_idol_comment_3rd").find("input[name=select_card_hash]").val(e), m.detail_list[c].is_exist_archive ? ($(".js_submit_check_idol_comment_5th").parent().show(), $(".form_check_idol_comment_5th").find("input[name=card_hash]").val(e), $(".form_check_idol_comment_5th").find("input[name=redirect_url]").val(h.replace(/__hash_card_id__/g, e))) : $(".js_submit_check_idol_comment_5th").parent().hide()
    }

    function t(e) {
        var e, t;
        e = "l_premium" == m.detail_list[c].show_card_type ? +m.detail_list[c].archive.premium ? m.images.l_premium[c] : m.images.l[c] : +m.detail_list[c].archive.normal ? m.images.l[c] : +m.detail_list[c].archive.premium ? m.images.l_premium[c] : "", t = "l_premium" == m.detail_list[c].show_card_type ? m.images.l_nosign_p[c] : +m.detail_list[c].archive.normal ? m.images.l_nosign[c] : +m.detail_list[c].archive.premium ? m.images.l_nosign_p[c] : "", q.set({
            idol_detail: m.detail_list[c],
            idol_image_bg_attribute: m.images.bg,
            idol_image: e,
            idol_image_quest: m.images.quest[c],
            idol_image_nosign: t,
            idol_image_noframe: m.images.l_noframe[c],
            idol_image_mask_l: m.images.mask_l[c],
            idol_image_mask_l_p: m.images.mask_l_p[c],
            birthday_flag: d
        }), F.render()
    }

    function i() {
        z.set(m.detail_list[c]), E.render()
    }

    function a() {
        m.detail_list[c].filtered_comments = l(m.detail_list[c].comments), m.detail_list[c].voice_enable = Y.check.isVoicePlay(), P.set(m.detail_list[c]), A.render()
    }

    function n() {
        var e = m.detail_list[c];
        if (e.voice_enable) {
            var t = e.data.attribute.slice(0, 2),
                i = e.data.hash_card_id,
                a = [];
            $(".btn_idol_voice").each(function(n, r) {
                var l = $(r).data("voice-key"),
                    _ = e.voice[l];
                _ && a.push({
                    id: l + "_" + i,
                    path: _,
                    start_call: function() {
                        o(r, t)
                    },
                    stop_call: function() {
                        s(r, t)
                    }
                }), a.length && u.setList(a)
            })
        }
    }

    function o(e, t) {
        $(e).removeClass("btn_idol_voice attribute_" + t + "_voice_mark_02").addClass("btn_idol_voice attribute_" + t + "_voice_mark_04")
    }

    function s(e, t) {
        $(e).removeClass("btn_idol_voice attribute_" + t + "_voice_mark_04").addClass("btn_idol_voice attribute_" + t + "_voice_mark_02")
    }

    function r() {
        Object.keys(m.idol_story_list).length > 0 && (H.set({
            idol_story_list: m.idol_story_list,
            idol_detail: m.detail_list[c],
            ios_app_flg: m.ios_app_flg,
            apple_review: m.apple_review,
            paging_info: K.get_paging_info(m.idol_story_list)
        }), K.render())
    }

    function l(e, t) {
        var i = {};
        return Object.keys(k).forEach(function(e) {
            void 0 == i[e] && (i[e] = {})
        }), Object.keys(w).forEach(function(t) {
            var a = w[t];
            if (void 0 != e[t])
                if (void 0 == i[a.category][a.type] && (i[a.category][a.type] = {}), "???" == e[t]) {
                    if (Object.keys(i[a.category][a.type]).length >= 1) return;
                    i[a.category][a.type][t] = b[a.conditions]
                } else i[a.category][a.type][t] = e[t]
        }), i
    }
    var d = window.birthday_flag,
        c = window.select_card_index,
        m = window.idol,
        p = (window.url_trade, window.url_album, window.url_event_memory, window.url_other_event, window.url_cartoon),
        h = window.url_comment_5th_redirect,
        u = window.bb_loader,
        g = "click",
        f = window.slider_pos,
        v = window.select_tab,
        w = window.comments_info,
        k = (window.type_names, window.category_names),
        b = window.conditions_names,
        y = window.comment_tab_start,
        x = window.show_premium,
        C = Backbone.Model.extend({
            defaults: {}
        }),
        j = Backbone.View.extend({
            el: "#tab-content",
            template: _.template($("#tab-4-template").html()),
            initialize: function() {
                0 == m.idol_story_list.length && (this.template = _.template($("#tab-3-template").html())), this.listenTo(this.model, "change", this.prepare)
            },
            events: {},
            prepare: function() {},
            render: function() {
                this.$el.html(this.template(this.model.toJSON()))
            }
        }),
        S = new C,
        B = new j({
            model: S
        }),
        M = Backbone.Model.extend({
            defaults: {}
        }),
        O = {};
    O[g + " .js_btn_expansion"] = "show_expansion_popup", O[g + " .js_btn_change_card_type"] = "change_card_type";
    var T = Backbone.View.extend({
            el: "#idol-base-content",
            popup: null,
            template: _.template($("#idol-base-template").html()),
            initialize: function() {
                this.listenTo(this.model, "change", this.prepare)
            },
            events: O,
            change_card_type: function() {
                switch (m.detail_list[c].show_card_type) {
                    case "l_premium":
                        m.detail_list[c].show_card_type = "l";
                        break;
                    case "l":
                    default:
                        m.detail_list[c].show_card_type = "l_premium"
                }
                t(m.detail_list[c].show_card_type)
            },
            show_expansion_popup: function() {
                var e = $("#popup-expansion-template").html(),
                    t = this.model.toJSON();
                null == this.popup && (this.popup = new Commonjs.Popup("popup-idol-expansion")), this.popup.set({
                    title: m.detail_list[c].data.card_name,
                    contents: _.template(e, t),
                    full_display_flg: !0
                }), this.popup.on("close", function() {
                    window.createjs && Commonjs.Canvas.stop && Commonjs.Canvas.stop()
                });
                var i = this.popup.get_contents(),
                    a = (i.find("#expansion_idol_image"), i.find("#expansion_idol_image_noframe")),
                    n = i.find("#expansion_idol_image_nosign"),
                    o = i.find(".js_replace_premium").eq(0);
                a.hide(), n.hide(), "l_premium" == m.detail_list[c].show_card_type && x || +m.detail_list[c].archive.premium && !+m.detail_list[c].archive.normal && x ? (i.find(".mask01").remove(), Commonjs.replacePremiumCard({
                    replace_element: o,
                    card_image: o.attr("src"),
                    width: 304,
                    idol_base_id: m.detail_list[c].premium_sign_idol_base_id,
                    script: m.detail_list[c].js_premium_sign
                })) : m.images.mask_l[c] || m.images.mask_l_p[c] ? ("l_premium" == m.detail_list[c].show_card_type || !+m.detail_list[c].archive.normal && +m.detail_list[c].archive.premium ? (i.find(".mask01").css("webkitMaskImage", "url(" + m.images.mask_l_p[c] + ")"), i.find(".mask02").css("webkitMaskImage", "url(" + m.images.mask_l2_p[c] + ")"), i.find(".cardFrame01").css("backgroundImage", "url(" + m.images.mask_l_p[c] + ")")) : (i.find(".mask01").css("webkitMaskImage", "url(" + m.images.mask_l[c] + ")"), i.find(".mask02").css("webkitMaskImage", "url(" + m.images.mask_l2[c] + ")"), i.find(".cardFrame01").css("backgroundImage", "url(" + m.images.mask_l[c] + ")")), function() {
                    function e(e) {
                        var n = e.accelerationIncludingGravity;
                        if (a.search(/iPhone/) != -1) var o = 5;
                        else var o = 2;
                        t = Math.floor(n.x * o), t > 1 | t < -1 && (a.search(/iPhone/) != -1 ? i.find(".cardFrame02").css("background-position-x", 30 * -t + "px") : i.find(".cardFrame02").css("background-position-x", 80 * t + "px"))
                    }
                    var t, a = navigator.userAgent;
                    if (window.addEventListener("devicemotion", e, !0), window.addEventListener("MozOrientation", e, !0), window.localStorage) {
                        var n = localStorage.getItem("CardEffectSet");
                        2 == n && (i.find(".cardFrame01").hide(), i.find(".cardFrame02").hide())
                    }
                }()) : i.find(".mask01").remove(), a.size() > 0 && i.find(".js_card_rotate").on("click", function(e) {
                    function t(e) {
                        return i.find(".mask011, .mask010, .mask01")
                    }
                    var i = $(e.currentTarget),
                        a = i.find(".js_current");
                    i.css("pointer-events", "none"), a.addClass("rotate_disappear"), a.attr("twinkle") && t().addClass("rotate_disappear"), a.one("webkitAnimationEnd", function(e) {
                        var n = a.next();
                        0 == n.hasClass("rotate_img") && (n = i.find(".rotate_img").eq(0)), t().removeClass("rotate_disappear").hide(), n.attr("twinkle") && t().addClass("rotate_appear").show(), a.removeClass("rotate_disappear js_current").hide(), n.addClass("rotate_appear js_current").show(), n.one("webkitAnimationEnd", function(e) {
                            n.removeClass("rotate_appear"), t().removeClass("rotate_appear"), i.css("pointer-events", "auto")
                        })
                    })
                }), this.popup.open()
            },
            prepare: function() {},
            render: function() {
                this.$el.html(this.template(this.model.toJSON()))
            }
        }),
        q = new M,
        F = new T({
            model: q
        }),
        I = Backbone.Model.extend({
            defaults: {}
        }),
        V = Backbone.View.extend({
            el: "#profile-content",
            template: _.template($("#profile-template").html()),
            initialize: function() {
                this.listenTo(this.model, "change", this.prepare)
            },
            events: {},
            prepare: function() {},
            render: function() {
                this.$el.html(this.template(this.model.toJSON()))
            }
        }),
        z = new I,
        E = new V({
            model: z
        }),
        J = Backbone.Model.extend({
            defaults: {
                filtered_comments: []
            }
        }),
        L = {};
    L[g + " .btn_idol_voice"] = "voice_play", L[g + " .acTrigger"] = "ac_open";
    var N = Backbone.View.extend({
            el: "#comment-content",
            template: _.template($("#comment-template").html()),
            initialize: function() {
                this.listenTo(this.model, "change", this.prepare)
            },
            events: L,
            ac_open: function(e, t) {
                var i = $(e.currentTarget),
                    t = t;
                t ? (i.parent().find("div.accoBody").show(), i.parent().addClass("open")) : i.parent().hasClass("open") ? i.parent().find("div.accoBody").slideUp(350, function() {
                    i.parent().removeClass("open")
                }) : i.parent().find("div.accoBody").slideDown(350, function() {
                    i.parent().addClass("open")
                })
            },
            voice_play: function(e) {
                var t = m.detail_list[c],
                    i = $(e.currentTarget),
                    a = i.data("voice-key"),
                    n = t.data.hash_card_id;
                u.play(a + "_" + n)
            },
            prepare: function() {},
            render: function() {
                this.$el.html(this.template(this.model.toJSON()))
            }
        }),
        P = new J,
        A = new N({
            model: P
        }),
        D = Backbone.Model.extend({
            defaults: {}
        }),
        G = {};
    G[g + " .checkForm"] = "set_voice_image", G[g + " .btn_pager_first"] = "pager_first", G[g + " .btn_pager_back"] = "pager_back", G[g + " .btn_pager_next"] = "pager_next", G[g + " .btn_pager_last"] = "pager_last";
    var U = Backbone.View.extend({
            el: "#story-content",
            template: _.template($("#story-template").html()),
            initialize: function() {
                this.listenTo(this.model, "change", this.prepare)
            },
            events: G,
            paging_info: {},
            set_voice_image: function(e) {
                var t = "_voice",
                    i = $(e.currentTarget),
                    a = i.parent(),
                    n = a.find("input[type=hidden]"),
                    o = a.find(".movie_name");
                if (1 == n.val()) {
                    n.val("0"), i.removeClass("ep_on").addClass("ep_off");
                    for (var s = 0; s < o.length; s++) o.eq(s).attr("src", o.eq(s).attr("src").replace(t, ""))
                } else {
                    n.val("1"), i.removeClass("ep_off").addClass("ep_on");
                    for (var s = 0; s < o.length; s++) o.eq(s).attr("src", o.eq(s).attr("src").replace(".png", t + ".png"))
                }
            },
            get_paging_info: function(e) {
                var t = 3;
                return this.paging_info = {
                    contents_num: t,
                    current_page: 0,
                    max_page_num: Math.floor((Object.keys(e).length - 1) / t)
                }, this.paging_info
            },
            pager_first: function(e) {
                this.paging_info.current_page = 0, this.render()
            },
            pager_back: function(e) {
                this.paging_info.current_page = Math.max(--this.paging_info.current_page, 0), this.render()
            },
            pager_next: function(e) {
                this.paging_info.current_page = Math.min(++this.paging_info.current_page, this.paging_info.max_page_num), this.render()
            },
            pager_last: function(e) {
                this.paging_info.current_page = this.paging_info.max_page_num, this.render()
            },
            prepare: function() {},
            render: function() {
                this.$el.html(this.template(this.model.toJSON()))
            }
        }),
        H = new D,
        K = new U({
            model: H
        }),
        Q = Backbone.Model.extend({
            defaults: {}
        }),
        R = Backbone.View.extend({
            el: "#parameter-content",
            template: _.template($("#parameter-template").html()),
            initialize: function() {
                this.listenTo(this.model, "change", this.prepare)
            },
            events: {},
            prepare: function() {},
            render: function() {
                this.$el.html(this.template(this.model.toJSON()))
            }
        }),
        W = new Q,
        X = new R({
            model: W
        });
    $(window).on("load", function() {
        S.set(), B.render(), $("#contents_tab").tab_switch({
            tabs: "[name^='tab_']",
            contents: "[class^='area_tab_']",
            start: v
        }), t(), i(), a(), n(), r(), null != y && $("#comment-content").find(".acTrigger").eq(y).trigger(g, !0), Object.keys(m.idol_story_list).length > 0 && (H.set({
            idol_story_list: m.idol_story_list,
            idol_detail: m.detail_list[c],
            ios_app_flg: m.ios_app_flg,
            apple_review: m.apple_review
        }), K.render()), W.set(m.detail_list[c]), X.render(), e(), $(".idolList").iSlider({
            height: "160px",
            slideshowSpeed: 0,
            navi: ".icon_navi",
            selected: "icon_selected",
            touch: !0,
            start: f,
            loop: !1
        }), $(".idol").on("click", function(o) {
            c = $(o.currentTarget).data("index"), m.detail_list[c].show_card_type = "l", t(), i(), a(), n(), r(), W.set(m.detail_list[c]), X.render(), e()
        })
    });
    var Y = Y || {
        check: {
            hasLocalStorage: function() {
                return !!window.localStorage
            },
            isVoicePlay: function() {
                return !(!this.hasLocalStorage() || "OFF" == Commonjs.loadLocalStorage("IdolVoiceAdmitSwitch"))
            }
        }
    };
    $(".js_submit_check_idol_comment_3rd").on("click", function() {
        $(".form_check_idol_comment_3rd").submit()
    }), $(".js_submit_check_idol_comment_5th").on("click", function() {
        $(".form_check_idol_comment_5th").submit()
    })
});
